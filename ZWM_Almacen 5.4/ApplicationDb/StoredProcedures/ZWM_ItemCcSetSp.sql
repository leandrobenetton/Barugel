/****** Object:  StoredProcedure [dbo].[ZWM_ItemCcSetSp]    Script Date: 01/09/2015 14:45:40 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ZWM_ItemCcSetSp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ZWM_ItemCcSetSp]
GO

/****** Object:  StoredProcedure [dbo].[ZWM_ItemCcSetSp]    Script Date: 01/09/2015 14:45:40 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/* $Header: /ApplicationDB/Stored Procedures/ZWM_ItemCcSetSp.sp 13    12/11/12 3:30p pgross $  */
/*
***************************************************************
*                                                             *
*                           NOTICE                            *
*                                                             *
*   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
*   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS AFFILIATES   *
*   OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED WITHOUT PRIOR  *
*   WRITTEN PERMISSION. LICENSED CUSTOMERS MAY COPY AND       *
*   ADAPT THIS SOFTWARE FOR THEIR OWN USE IN ACCORDANCE WITH  *
*   THE TERMS OF THEIR SOFTWARE LICENSE AGREEMENT.            *
*   ALL OTHER RIGHTS RESERVED.                                *
*                                                             *
*   (c) COPYRIGHT 2008 INFOR.  ALL RIGHTS RESERVED.           *
*   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
*   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
*   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL RIGHTS        *
*   RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE         *
*   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
*                                                             *
***************************************************************
*/

/* $Archive: /ApplicationDB/Stored Procedures/ZWM_ItemCcSetSp.sp $
 *
 * SL8.04 13 156471 pgross Tue Dec 11 15:30:34 2012
 * Cycle count setup  should be able to set Zero Quantity  to lot tracked item
 * removed special handling of lot-tracked items
 *
 * SL8.03 12 146321 pgross Fri Apr 13 14:45:39 2012
 * form text does not match processing.
 * corrected handling of a NULL @CycleType parameter
 *
 * SL8.02 11 rs4588 Dahn Thu Mar 04 14:38:02 2010
 * rs4588 copyright header changes
 *
 * SL8.01 10 rs3953 Vlitmano Tue Aug 26 17:05:36 2008
 * RS3953 - Changed a Copyright header?
 *
 * SL8.01 9 rs3953 Vlitmano Mon Aug 18 15:27:20 2008
 * Changed a Copyright header information(RS3959)
 *
 * SL8.00 8 102667 magler Tue Jun 12 14:32:48 2007
 * Update ETPs
 * Inserting standard ETP call
 *
 * SL8.00 7 RS2968 nkaleel Fri Feb 23 03:11:40 2007
 * changing copyright information
 *
 * SL8.00 6 RS3387 kdatla Tue Dec 12 09:22:57 2006
 *
 * SL8.00 5 RS2968 prahaladarao.hs Tue Jul 11 09:32:53 2006
 * RS 2968, Name change CopyRight Update.
 *
 * SL7.05 4 91818 NThurn Fri Jan 06 15:53:43 2006
 * Inserted standard External Touch Point call.  (RS3177)
 *
 * SL7.04 3 85589 Debmcw Tue Feb 01 16:49:43 2005
 * The last count date is mistakenly deleted when the setup is run even though the option was not selected for update
 * 85499
 *
 * $NoKeywords: $
 */
CREATE PROCEDURE [dbo].[ZWM_ItemCcSetSp] (
   @RollBackonProcessCount flag,
   @CycleType       CycleTypeType,
   @CycleFreq       CycleFreqType,
   @LastCount       DateType,
   @AbcCode         NVARCHAR(3),  -- AbcCodeType UDDT can only store 1 character
   @BegItem         ItemType,
   @EndItem         ItemType,
   @BegProductCode  ProductCodeType,
   @EndProductCode  ProductCodeType,
   @BegFamCode		FamilyCodeType,
   @EndFamCode		FamilyCodeType,
   @BegPlanCode     UserCodeType,
   @EndPlanCode     UserCodeType,
   @BegWhse         WhseType,
   @EndWhse         WhseType,
   @ProcessCount    Int OUTPUT,
   @Infobar         InfobarType OUTPUT
)
AS

   -- Check for existence of Generic External Touch Point routine (this section was generated by SpETPCodeSp and inserted by CallETPs.exe):
   IF OBJECT_ID(N'dbo.EXTGEN_ZWM_ItemCcSetSp') IS NOT NULL
   BEGIN
      DECLARE @EXTGEN_SpName sysname
      SET @EXTGEN_SpName = N'dbo.EXTGEN_ZWM_ItemCcSetSp'
      -- Invoke the ETP routine, passing in (and out) this routine's parameters:
      DECLARE @EXTGEN_Severity int
      EXEC @EXTGEN_Severity = @EXTGEN_SpName
         @RollBackonProcessCount
         , @CycleType
         , @CycleFreq
         , @LastCount
         , @AbcCode
         , @BegItem
         , @EndItem
         , @BegProductCode
         , @EndProductCode
         , @BegFamCode
         , @EndFamCode
         , @BegPlanCode
         , @EndPlanCode
         , @BegWhse
         , @EndWhse
         , @ProcessCount OUTPUT
         , @Infobar OUTPUT
 
      -- ETP routine can RETURN 1 to signal that the remainder of this standard routine should now proceed:
      IF @EXTGEN_Severity <> 1
         RETURN @EXTGEN_Severity
   END
   -- End of Generic External Touch Point code.
 
IF @RollBackonProcessCount =1
      BEGIN TRANSACTION
DECLARE
   @Severity        Int

SET @Infobar = NULL
SET @Severity = 0

IF @AbcCode IS NULL
   SET @AbcCode = 'ABC'

UPDATE iwhse
SET iwhse.cycle_freq = CASE WHEN @CycleFreq IS NULL THEN iwhse.cycle_freq
                          ELSE @CycleFreq
             END,
    iwhse.last_cycle = CASE WHEN @LastCount IS NULL THEN iwhse.last_cycle
                          ELSE @LastCount
             END,
    iwhse.cycle_type = CASE when @CycleType is NULL THEN iwhse.cycle_type
                 ELSE @CycleType
              END
FROM itemwhse iwhse
JOIN item itm ON (iwhse.item = itm.item)
WHERE
   itm.item BETWEEN ISNULL(@BegItem, itm.item)
                AND ISNULL(@EndItem, itm.item)
  AND
   itm.product_code BETWEEN ISNULL(@BegProductCode, itm.product_code)
                        AND ISNULL(@EndProductCode, itm.product_code)
  --Leandro Silva, 18/12/2014 - Agregado para modulo de almacen
  AND
   ISNULL(itm.family_code, '') BETWEEN ISNULL(@BegFamCode, ISNULL(itm.family_code, ''))
                     AND ISNULL(@EndFamCode, ISNULL(itm.family_code, ''))
  AND
   ISNULL(itm.plan_code, '') BETWEEN ISNULL(@BegPlanCode, ISNULL(itm.plan_code, ''))
                     AND ISNULL(@EndPlanCode, ISNULL(itm.plan_code, ''))
  AND
   CHARINDEX(itm.abc_code, @AbcCode) > 0
  AND
   iwhse.whse BETWEEN ISNULL(@BegWhse, iwhse.whse)
                  AND ISNULL(@EndWhse, iwhse.whse)

SELECT @ProcessCount = @@ROWCOUNT,
       @Severity = @@ERROR
IF @RollBackonProcessCount =1
      BEGIN
         IF @ProcessCount > 0
            COMMIT TRANSACTION
         ELSE
            ROLLBACK TRANSACTION
      END
IF @Severity <> 0
   EXEC dbo.RaiseErrorSp @Infobar, @Severity, 1

RETURN @Severity

GO


