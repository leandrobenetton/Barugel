/****** Object:  StoredProcedure [dbo].[ZWM_RFShipSp]    Script Date: 01/20/2015 15:16:35 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ZWM_RFShipSp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ZWM_RFShipSp]
GO

/****** Object:  StoredProcedure [dbo].[ZWM_RFShipSp]    Script Date: 01/20/2015 15:16:35 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[ZWM_RFShipSp] (
    @Site			 SiteType
    ,@UserName		 UsernameType		= NULL
    ,@RouteID		 ZwmIdRouteMapType	= NULL
    ,@ShipID		 ShipmentIDType		= NULL
	,@CoNum			 CoNumType			= NULL
    ,@Confirmation	 FlagNyType			= 0
    ,@OnHandNegative INT				= 0 --para el SP  COShippingLoopSp
    ,@Origin		 TransferStatusType -- 'T' = Transferencia, 'O' = Orden de venta
    ,@Infobar		 InfobarType OUTPUT
)
AS

-- Check for existence of Generic External Touch Point routine (this section was generated by SpETPCodeSp and inserted by CallETPs.exe):
   IF OBJECT_ID(N'dbo.EXTGEN_ZWM_RFShipSp') IS NOT NULL
   BEGIN
      DECLARE @EXTGEN_SpName sysname
      SET @EXTGEN_SpName = N'dbo.EXTGEN_ZWM_RFShipSp'
      -- Invoke the ETP routine, passing in (and out) this routine's parameters:
      DECLARE @EXTGEN_Severity int
      EXEC @EXTGEN_Severity = @EXTGEN_SpName
		@Site			 
		,@UserName		 
		,@RouteID		 
		,@ShipID		 
		,@CoNum			 
		,@Confirmation	 
		,@OnHandNegative 
		,@Origin
		,@Infobar		  OUTPUT	
 
      -- ETP routine can RETURN 1 to signal that the remainder of this standard routine should now proceed:
      IF @EXTGEN_Severity <> 1
         RETURN @EXTGEN_Severity
   END
   -- End of Generic External Touch Point code.
   

DECLARE	@return_value		int,
		@sessionId          RowPointerType,
		@Severity			int
		

SET @Severity = 0
SET @Confirmation = ISNULL(@Confirmation,0)

SET @UserName = isnull(@UserName,'sa')

EXEC	@return_value = [dbo].[InitSessionContextWithUserSp]
		@ContextName = 'ZWM',
		@UserName = @UserName,
		@SessionID = @SessionID OUTPUT,
		@Site = @Site

------------------------------ SET NULLs		
IF LEN(LTRIM(@RouteID)) = 0 SET @RouteID = NULL
IF LEN(LTRIM(@ShipID)) = 0 SET @ShipID = NULL
IF LEN(LTRIM(@CoNum)) = 0 SET @CoNum = NULL
------------------------------ SET NULLs
		
------------------------------------------------------------------------------------- Validaciones		
IF @RouteID IS NULL AND @ShipID IS NULL AND @CoNum IS NULL
	BEGIN
		SET @Infobar = 'Debe ingresar una hoja de ruta, Ship ID u Orden'
		SET @Severity = 16
		RETURN @Severity
	END
	
IF (SELECT count(shipment_id) FROM shipment WHERE shipment_id = @ShipID) = 0 
AND (SELECT count(shipment_id) FROM shipment_line s JOIN pick_list p on s.pick_list_id = p.pick_list_id WHERE p.ZWM_IdRouteMap = @RouteID) = 0 
AND (SELECT count(shipment_id) FROM shipment_line s JOIN pick_list_ref pr on pr.pick_list_id = s.pick_list_id WHERE pr.ref_num = @CoNum) = 0 
	BEGIN
		SET @Infobar = 'No existen Ship con los datos ingresados' ---VER TEXTO DEL MENSAJE
		SET @Severity = 16
		RETURN @Severity
	END	
-------------------------------------------------------------------------------------
	
IF @ShipID IS NOT NULL
BEGIN
	IF exists(SELECT shipment_id from shipment where status = 'O' AND shipment_id = @ShipID) AND @Confirmation = 0
	BEGIN
		SET @Infobar = 'Hay Shipment en estado "Abierto"'
		SET @Severity = 16
		RETURN @Severity
	END
	
	ELSE IF EXISTS(SELECT shipment_id FROM shipment WHERE status = 'O' AND shipment_id = @ShipID) AND @Confirmation = 1
		UPDATE shipment SET status = 'R' WHERE status = 'O' AND shipment_id = @ShipID
	
	IF NOT EXISTS(SELECT shipment_id FROM shipment WHERE status = 'R' AND shipment_id = @ShipID)
	BEGIN
		SET @Infobar = 'No hay registros para procesar'
		SET @Severity = 16
		RETURN @Severity
	END
END

IF @RouteID IS NOT NULL
BEGIN
	IF EXISTS( select distinct(sl.shipment_id) FROM shipment_line sl
	JOIN pick_list pl on pl.pick_list_id = sl.pick_list_id 
	JOIN shipment s on sl.shipment_id = s.shipment_id
	WHERE pl.ZWM_IdRouteMap = @RouteID AND s.status = 'O') AND @Confirmation = 0
	BEGIN
		SET @Infobar = 'Hay Shipment en estado "Abierto"'
		SET @Severity = 16
		RETURN @Severity
	END
	
	ELSE IF EXISTS( SELECT distinct(sl.shipment_id) FROM shipment_line sl
	JOIN pick_list pl on pl.pick_list_id = sl.pick_list_id 
	JOIN shipment s on sl.shipment_id = s.shipment_id
	WHERE pl.ZWM_IdRouteMap = @RouteID AND s.status = 'O') AND @Confirmation = 1
	BEGIN
		UPDATE shipment SET status = 'R' WHERE shipment_id = 
		(SELECT s.shipment_id
			FROM shipment s
			JOIN shipment_line sl
			ON s.shipment_id = sl.shipment_id 
			JOIN pick_list pl
			ON pl.pick_list_id = sl.pick_list_id
			WHERE pl.ZWM_IdRouteMap = @RouteID
		)
	END
	
	IF NOT EXISTS( SELECT distinct(sl.shipment_id) FROM shipment_line sl
	JOIN pick_list pl on pl.pick_list_id = sl.pick_list_id 
	JOIN shipment s on sl.shipment_id = s.shipment_id
	WHERE pl.ZWM_IdRouteMap = @RouteID AND s.status = 'R')
	BEGIN
		SET @Infobar = 'No hay registros para procesar'
		SET @Severity = 16
		RETURN @Severity
	END
END

IF @CoNum IS NOT NULL
BEGIN
	IF EXISTS(SELECT distinct(sl.shipment_id) FROM shipment_line sl
	JOIN pick_list_ref plr on plr.pick_list_id = sl.pick_list_id
	JOIN shipment s on sl.shipment_id = s.shipment_id
	WHERE plr.ref_num = @CoNum AND s.status = 'O') AND @Confirmation = 0
	BEGIN
		SET @Infobar = 'Hay Shipment en estado "Abierto"'
		SET @Severity = 16
		RETURN @Severity
	END
	
	ELSE IF EXISTS( SELECT distinct(sl.shipment_id) FROM shipment_line sl
	JOIN pick_list_ref plr on plr.pick_list_id = sl.pick_list_id
	JOIN shipment s on sl.shipment_id = s.shipment_id
	WHERE plr.ref_num = @CoNum AND s.status = 'O') AND @Confirmation = 1
	BEGIN
		UPDATE shipment SET status = 'R' WHERE shipment_id = 
		(SELECT s.shipment_id
			FROM shipment s
			JOIN shipment_line sl
			ON s.shipment_id = sl.shipment_id 
			JOIN pick_list_ref plr
			ON plr.pick_list_id = sl.pick_list_id
			WHERE plr.ref_num = @CoNum
		)
	END
	
	IF NOT EXISTS(SELECT distinct(sl.shipment_id) FROM shipment_line sl
	JOIN pick_list_ref plr on plr.pick_list_id = sl.pick_list_id 
	JOIN shipment s on sl.shipment_id = s.shipment_id
	WHERE plr.ref_num = @CoNum AND s.status = 'R')
	BEGIN
		SET @Infobar = 'No hay registros para procesar'
		SET @Severity = 16
		RETURN @Severity
	END
END


-------------------------------------------------------------------------------------

DECLARE 
@Curdate		DateTime
,@IgnoreLCR		ListYesNoType
,@IgnoreCount	ListYesNoType
,@Shipment		ShipmentIDType
,@FirstSequenceWithError int
,@RecordsPosted int
,@PromptButtons InfobarType


SET @IgnoreLCR = isnull(@IgnoreLCR, 0)
SET @IgnoreCount = isnull(@IgnoreCount, 0)
SET @Curdate = GETDATE()
		
DECLARE shipCursor CURSOR LOCAL STATIC FOR
	SELECT DISTINCT s.shipment_id
	FROM shipment s
	JOIN shipment_line sl
	ON s.shipment_id = sl.shipment_id 
	JOIN pick_list pl
	ON pl.pick_list_id = sl.pick_list_id
	JOIN pick_list_ref plr
	ON plr.pick_list_id = sl.pick_list_id
	WHERE s.status = 'R' 
	AND (pl.ZWM_IdRouteMap = @RouteID OR s.shipment_id = @ShipID OR plr.ref_num = @CoNum)
	
	OPEN shipCursor
	WHILE 1=1
	BEGIN
		
		FETCH shipCursor INTO @Shipment
		
		IF @@FETCH_STATUS <> 0 BREAK
		
		EXEC @Severity = [dbo].[ShipConfirmationSp]
			 @ShipmentId      = @Shipment
			,@Curdate         = @Curdate
			,@IgnoreLCR       = @IgnoreLCR
			,@IgnoreCount     = @IgnoreCount
			,@InfoBar         = @InfoBar OUTPUT
			
		IF(@Origin = 'O')
		BEGIN
			EXEC @Severity = [dbo].[COShippingLoopSp]
				@OnHandNegative			= @OnHandNegative,
				@FirstSequenceWithError = @FirstSequenceWithError OUTPUT,
				@RecordsPosted			= @RecordsPosted OUTPUT,
				@Infobar				= @Infobar OUTPUT,
				@PromptButtons			= @PromptButtons OUTPUT,
				@MsgFlag				= NULL
			
			EXEC	@Severity = [dbo].[COShippingCleanupSp]
		END
		
		IF(@Origin = 'T')
		BEGIN
			EXEC @Severity = [dbo].[ZWM_TransferOrderShipConfirmationSp]
				@ShipmentID		= @Shipment
				,@Infobar		= @Infobar OUTPUT
		END
	END --end cursor
CLOSE shipCursor
DEALLOCATE shipCursor
	
EXEC dbo.CloseSessionContextSp @SessionID = @SessionID

RETURN @Severity
GO


