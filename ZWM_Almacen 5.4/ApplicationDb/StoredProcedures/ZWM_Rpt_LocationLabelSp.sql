/****** Object:  StoredProcedure [dbo].[ZWM_Rpt_LocationLabelSp]    Script Date: 01/09/2015 14:58:20 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ZWM_Rpt_LocationLabelSp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ZWM_Rpt_LocationLabelSp]
GO

/****** Object:  StoredProcedure [dbo].[ZWM_Rpt_LocationLabelSp]    Script Date: 01/09/2015 14:58:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[ZWM_Rpt_LocationLabelSp] (
	@Whse			WhseType = NULL
	,@LocFrom		LocType = NULL
	,@LocTo			LocType   = NULL
	,@LabelSets		smallint = 1
	,@pSite			SiteType
)
AS


-- Check for existence of Generic External Touch Point routine (this section was generated by SpETPCodeSp and inserted by CallETPs.exe):
   IF OBJECT_ID(N'dbo.EXTGEN_ZWM_GenerateTransferOrder') IS NOT NULL
   BEGIN
      DECLARE @EXTGEN_SpName sysname
      SET @EXTGEN_SpName = N'dbo.EXTGEN_ZWM_GenerateTransferOrder'
      -- Invoke the ETP routine, passing in (and out) this routine's parameters:
      DECLARE @EXTGEN_Severity int
      EXEC @EXTGEN_Severity = @EXTGEN_SpName
		@Whse			
		,@LocFrom		
		,@LocTo			
		,@LabelSets		
		,@pSite			
 
      -- ETP routine can RETURN 1 to signal that the remainder of this standard routine should now proceed:
      IF @EXTGEN_Severity <> 1
         RETURN @EXTGEN_Severity
   END
   -- End of Generic External Touch Point code.
   

-- A session context is created so session variables can be used.
DECLARE @RptSessionID RowPointerType

EXEC dbo.InitSessionContextSp
     @ContextName = 'ZWM'
   , @SessionID   = @RptSessionID    OUTPUT
   , @Site        = @pSite


DECLARE @Severity int

SET @Severity = 0
SET @LocFrom = ISNULL(@LocFrom, dbo.LowString('LocType'))
SET @LocTo = ISNULL(@LocTo, dbo.HighString('LocType'))

Declare @iCount as smallint
Set @iCount = 1

Declare @CountTable TABLE (iLCount smallint NOT NULL)

While @iCount <= @LabelSets
Begin
  INSERT INTO @CountTable (iLCount) Values (@iCount)
  Set @iCount = @iCount + 1
End

SELECT loc.loc, loc.description as loc_desc, whse.whse, whse.name as whse_name, iLCount
FROM location loc
CROSS JOIN whse
CROSS JOIN @CountTable
WHERE
loc.loc BETWEEN @LocFrom AND @LocTo
AND whse = @Whse
ORDER BY whse.whse, loc.loc

Return @Severity


EXEC dbo.CloseSessionContextSp @SessionID = @RptSessionID


GO


