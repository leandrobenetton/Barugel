/****** Object:  StoredProcedure [dbo].[ZWM_UmToStk1Stk2ConvQtySp]    Script Date: 01/09/2015 15:00:43 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ZWM_UmToStk1Stk2ConvQtySp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ZWM_UmToStk1Stk2ConvQtySp]
GO

/****** Object:  StoredProcedure [dbo].[ZWM_UmToStk1Stk2ConvQtySp]    Script Date: 01/09/2015 15:00:43 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[ZWM_UmToStk1Stk2ConvQtySp] (
  @Item				ItemType
, @QtyToBeConverted QtyUnitType
, @Type				smallint		= 0     --0: Cantidad en UMStk2, resto en UMStk1 y resto en Std; 1: cant en UmStk2, UmStk1 y Std redondeada hacia arriba, 2: Convierte
, @QtyStk2			QtyUnitType      OUTPUT
, @UMStk2			UMType		     OUTPUT
, @QtyStk1			QtyUnitType      OUTPUT
, @UMStk1			UMType			 OUTPUT
, @QtyStkStd		QtyUnitType      OUTPUT
, @UMStd			UMType			 OUTPUT
, @Infobar          InfobarType      OUTPUT
)
AS

   -- Check for existence of Generic External Touch Point routine (this section was generated by SpETPCodeSp and inserted by CallETPs.exe):
   IF OBJECT_ID(N'dbo.EXTGEN_ZWM_UmToStk1Stk2ConvQtySp') IS NOT NULL
   BEGIN
      DECLARE @EXTGEN_SpName sysname
      SET @EXTGEN_SpName = N'dbo.EXTGEN_Zwm_UmToStk1Stk2ConvQtySp'
      -- Invoke the ETP routine, passing in (and out) this routine's parameters:
      DECLARE @EXTGEN_Severity int
      EXEC @EXTGEN_Severity = @EXTGEN_SpName
		   @Item
         , @QtyToBeConverted
         , @Type
         , @QtyStk2		 OUTPUT
         , @UMStk2		 OUTPUT
         , @QtyStk1		 OUTPUT
         , @UMStk1		 OUTPUT
         , @QtyStkStd	 OUTPUT
         , @UMStd		 OUTPUT
         , @Infobar		 OUTPUT
  
      -- ETP routine can RETURN 1 to signal that the remainder of this standard routine should now proceed:
      IF @EXTGEN_Severity <> 1
         RETURN @EXTGEN_Severity
   END
   -- End of Generic External Touch Point code.

DECLARE @Severity int
SET @Severity = 0

DECLARE 
@QtyStkRest	QtyUnitType

SET @QtyToBeConverted = ISNULL(@QtyToBeConverted,0)
SET @QtyStk2 = 0 
SET @QtyStk1 = 0
SET @QtyStkStd = 0 

SELECT @UMStk2 = ZWM_UMStock2 FROM item where item.item = @Item
SELECT @UMStk1 = ZWM_UMStock1 FROM item where item.item = @Item
SELECT @UMStd = u_m FROM item where item.item = @Item

select * from item_mst

IF (@Type = 0 Or @Type is null)
BEGIN

	IF @QtyToBeConverted > 0 and @UMStk2 is not null
	BEGIN
		EXEC @Severity = dbo.UMConvQtySp
			@UM               = @UMStk2
		  , @Item             = @Item
		  , @VendNum          = NULL
		  , @Area             = NULL
		  , @ConvertToBase    = 0
		  , @QtyToBeConverted = @QtyToBeConverted 
		  , @OutQty           = @QtyStk2 OUTPUT
		  , @Infobar          = @Infobar OUTPUT	
	
		SET @QtyStkRest = @QtyStk2 - FLOOR(@QtyStk2)
		SET @QtyStk2 = FLOOR(@QtyStk2)

		EXEC @Severity = dbo.UMConvQtySp
			@UM               = @UMStk2
		  , @Item             = @Item
		  , @VendNum          = NULL
		  , @Area             = NULL
		  , @ConvertToBase    = 1
		  , @QtyToBeConverted = @QtyStkRest
		  , @OutQty           = @QtyToBeConverted OUTPUT
		  , @Infobar          = @Infobar OUTPUT
	END

	IF @QtyToBeConverted > 0 and @UMStk1 is not null
	BEGIN
		EXEC @Severity = dbo.UMConvQtySp
			@UM               = @UMStk1
		  , @Item             = @Item
		  , @VendNum          = NULL
		  , @Area             = NULL
		  , @ConvertToBase    = 0
		  , @QtyToBeConverted = @QtyToBeConverted 
		  , @OutQty           = @QtyStk1 OUTPUT
		  , @Infobar          = @Infobar OUTPUT	
	
		SET @QtyStkRest = @QtyStk1 - FLOOR(@QtyStk1)
		SET @QtyStk1 = FLOOR(@QtyStk1)	

		EXEC @Severity = dbo.UMConvQtySp
			@UM               = @UMStk1
		  , @Item             = @Item
		  , @VendNum          = NULL
		  , @Area             = NULL
		  , @ConvertToBase    = 1
		  , @QtyToBeConverted = @QtyStkRest
		  , @OutQty           = @QtyToBeConverted OUTPUT
		  , @Infobar          = @Infobar OUTPUT
	END
	
	SET @QtyStkStd = @QtyToBeConverted
	
END

IF (@Type = 1)
BEGIN

	IF @QtyToBeConverted > 0 and @UMStk2 is not null
	BEGIN
		EXEC @Severity = dbo.UMConvQtySp
			@UM               = @UMStk2
		  , @Item             = @Item
		  , @VendNum          = NULL
		  , @Area             = NULL
		  , @ConvertToBase    = 0
		  , @QtyToBeConverted = @QtyToBeConverted 
		  , @OutQty           = @QtyStk2 OUTPUT
		  , @Infobar          = @Infobar OUTPUT	
	
		SET @QtyStk2 = CEILING(@QtyStk2)
	END

	IF @QtyToBeConverted > 0 and @UMStk1 is not null
	BEGIN
		EXEC @Severity = dbo.UMConvQtySp
			@UM               = @UMStk1
		  , @Item             = @Item
		  , @VendNum          = NULL
		  , @Area             = NULL
		  , @ConvertToBase    = 0
		  , @QtyToBeConverted = @QtyToBeConverted 
		  , @OutQty           = @QtyStk1 OUTPUT
		  , @Infobar          = @Infobar OUTPUT	
	
		SET @QtyStk1 = CEILING(@QtyStk1)	
	END
	
	SET @QtyStkStd = @QtyToBeConverted
END

IF (@Type = 2)
BEGIN

	IF @QtyToBeConverted > 0 and @UMStk2 is not null
	BEGIN
		EXEC @Severity = dbo.UMConvQtySp
			@UM               = @UMStk2
		  , @Item             = @Item
		  , @VendNum          = NULL
		  , @Area             = NULL
		  , @ConvertToBase    = 0
		  , @QtyToBeConverted = @QtyToBeConverted 
		  , @OutQty           = @QtyStk2 OUTPUT
		  , @Infobar          = @Infobar OUTPUT	
	END

	IF @QtyToBeConverted > 0 and @UMStk1 is not null
	BEGIN
		EXEC @Severity = dbo.UMConvQtySp
			@UM               = @UMStk1
		  , @Item             = @Item
		  , @VendNum          = NULL
		  , @Area             = NULL
		  , @ConvertToBase    = 0
		  , @QtyToBeConverted = @QtyToBeConverted 
		  , @OutQty           = @QtyStk1 OUTPUT
		  , @Infobar          = @Infobar OUTPUT	
	END
	
	SET @QtyStkStd = @QtyToBeConverted
END

RETURN

GO


