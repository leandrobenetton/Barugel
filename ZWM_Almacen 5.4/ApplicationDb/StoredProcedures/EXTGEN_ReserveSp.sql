/****** Object:  StoredProcedure [dbo].[EXTGEN_ReserveSp]    Script Date: 10/28/2014 15:40:19 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EXTGEN_ReserveSp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[EXTGEN_ReserveSp]
GO

/****** Object:  StoredProcedure [dbo].[EXTGEN_ReserveSp]    Script Date: 10/28/2014 15:40:19 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/* $Header: /ApplicationDB/Stored Procedures/ReserveSp.sp 17    8/29/11 11:58a vanmmar $  */
/*
***************************************************************
*                                                             *
*                           NOTICE                            *
*                                                             *
*   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
*   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS AFFILIATES   *
*   OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED WITHOUT PRIOR  *
*   WRITTEN PERMISSION. LICENSED CUSTOMERS MAY COPY AND       *
*   ADAPT THIS SOFTWARE FOR THEIR OWN USE IN ACCORDANCE WITH  *
*   THE TERMS OF THEIR SOFTWARE LICENSE AGREEMENT.            *
*   ALL OTHER RIGHTS RESERVED.                                *
*                                                             *
*   (c) COPYRIGHT 2010 INFOR.  ALL RIGHTS RESERVED.           *
*   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
*   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
*   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL RIGHTS        *
*   RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE         *
*   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
*                                                             *
***************************************************************
*/

/* $Archive: /ApplicationDB/Stored Procedures/ReserveSp.sp $
 *
 * SL8.03 17 141543 vanmmar Mon Aug 29 11:58:58 2011
 * 141543
 *
 * SL8.03 16 139207 Dmcwhorter Fri Jun 10 13:14:00 2011
 * Reserved Qty is always zero when running Preview
 * 139207 - During Preview, show the amount that will be reserved.
 *
 * SL8.02 15 128675 Mewing Tue Apr 27 14:54:27 2010
 * Update Copyright to 2010
 *
 * SL8.02 14 128372 pgross Thu Mar 18 13:36:41 2010
 * Order Shipping - when shipping a reservable item from a non-reserved location causing MRP to plan extra materials.
 * added explicit transaction block handling
 *
 * SL8.02 13 125228 pgross mar. mars 09 14:10:29 2010
 * .Net Framework Execution wsa aborted by escalation policy because of out of memory
 * made changes to improve performance
 *
 * SL8.02 12 rs4588 Dahn Thu Mar 04 16:22:30 2010
 * rs4588 copyright header changes
 *
 * SL8.01 11 rs3953 Vlitmano Tue Aug 26 17:13:56 2008
 * RS3953 - Changed a Copyright header?
 *
 * SL8.01 10 rs3953 Vlitmano Mon Aug 18 15:36:29 2008
 * Changed a Copyright header information(RS3959)
 *
 * SL8.01 9 108501 nmannam Tue Mar 25 04:53:35 2008
 * Error message and not able to ship Reserved item: "Procedure or Function 'UpdResvSp' expects parameter '@SessionID', which was not supplied."
 * 108501- sessionid is passed to 'UpdResvSp'.
 *
 * SL8.00 8 RS2968 nkaleel Fri Feb 23 04:38:40 2007
 * changing copyright information(RS2968)
 *
 * SL8.00 7 RS2968 prahaladarao.hs Tue Jul 11 11:15:08 2006
 * RS 2968, Name change CopyRight Update.
 *
 * SL8.00 6 93558 jabraham Fri Mar 31 01:48:32 2006
 * Order Date not populating
 * ISSUE 93558
 * Added code for getting Order date correctly
 *
 * SL7.05 5 91818 NThurn Fri Jan 06 16:47:55 2006
 * Inserted standard External Touch Point call.  (RS3177)
 *
 * SL7.04 4 91152 Hcl-guptanu Wed Dec 28 05:51:04 2005
 * Issue ## 91152
 * Added "WITH (READUNCOMMITTED)" to item selects.
 *
 * $NoKeywords: $
 */
CREATE PROCEDURE [dbo].[EXTGEN_ReserveSp] (
  @RsvdType       NCHAR
, @InFile         NCHAR
, @StartCoNum     CoNumType
, @EndCoNum       CoNumType
, @StartCoLine    CoLineType
, @EndCoLine      CoLineType
, @StartCoRelease CoLineType
, @EndCoRelease   CoLineType
, @StartOrderDate GenericDate
, @EndOrderDate   GenericDate
, @StartDueDate   GenericDate
, @EndDueDate     GenericDate
, @StartCustNum   CustNumType
, @EndCustNum     CustNumType
, @StartItem      ItemType
, @EndItem        ItemType
, @Infobar        Infobar     OUTPUT
, @StartOrderDateOffset  DateOffsetType = NULL
, @EndOrderDateOffset  DateOffsetType = NULL
, @StartDueDateOffset  DateOffsetType = NULL
, @EndDueDateOffset  DateOffsetType = NULL
)
AS

   -- Check for existence of Generic External Touch Point routine (this section was generated by SpETPCodeSp and inserted by CallETPs.exe):
   IF OBJECT_ID(N'dbo.EXTGEN_EXTGEN_ReserveSp') IS NOT NULL
   BEGIN
      DECLARE @EXTGEN_SpName sysname
      SET @EXTGEN_SpName = N'dbo.EXTGEN_EXTGEN_ReserveSp'
      -- Invoke the ETP routine, passing in (and out) this routine's parameters:
      DECLARE @EXTGEN_Severity int
      EXEC @EXTGEN_Severity = @EXTGEN_SpName
         @RsvdType
         , @InFile
         , @StartCoNum
         , @EndCoNum
         , @StartCoLine
         , @EndCoLine
         , @StartCoRelease
         , @EndCoRelease
         , @StartOrderDate
         , @EndOrderDate
         , @StartDueDate
         , @EndDueDate
         , @StartCustNum
         , @EndCustNum
         , @StartItem
         , @EndItem
         , @Infobar OUTPUT
         , @StartOrderDateOffset
         , @EndOrderDateOffset
         , @StartDueDateOffset
         , @EndDueDateOffset
 
      -- ETP routine can RETURN 1 to signal that the remainder of this standard routine should now proceed:
      IF @EXTGEN_Severity <> 1
         RETURN @EXTGEN_Severity
   END
   -- End of Generic External Touch Point code.
 
EXEC dbo.ApplyDateOffsetSp @StartOrderDate OUTPUT, @StartOrderDateOffset, 0
EXEC dbo.ApplyDateOffsetSp @EndOrderDate OUTPUT, @EndOrderDateOffset, 1
EXEC dbo.ApplyDateOffsetSp @StartDueDate OUTPUT, @StartDueDateOffset, 0
EXEC dbo.ApplyDateOffsetSp @EndDueDate OUTPUT, @EndDueDateOffset, 1

DECLARE
  @Severity        INT
, @QtyReserved     QtyUnitType
, @ItmItem         ItemType
, @ItmDescription  DescriptionType
, @ItmUM           UMType
, @CotCoNum        CoNumType
, @CotCoLine       CoLineType
, @CotCoRelease    CoLineType
, @CotQtyToReserve QtyUnitType
, @CotWhse         WhseType
, @CotUM           UMType
, @CotDueDate      GenericDate
, @CoCustNum       CustNumType
, @CadCustName     NameType
, @RsiRowPointer   RowPointerType
, @RsiQtyRsvdConv  QtyUnitType
, @CoOrderDate     GenericDate
, @CotQtyOrdered   QtyUnitType
, @SessionID       RowPointerType
, @UseStat nvarchar(10)
, @ParmsSite SiteType
, @PostCount int

SET @Severity    = 0
SET @Infobar     = NULL
SET @QtyReserved = 0
set @UseStat = case when @RsvdType = 'R' then 'O' else 'OF' end
select @ParmsSite = site from parms with (readuncommitted)

SELECT
  @CotCoNum       AS co_num
, @CotCoLine      AS co_line
, @CotCoRelease   AS co_release
, @CoOrderDate    AS order_date
, @CotDueDate     AS due_date
, @CadCustName    AS name
, @CotQtyOrdered  AS qty_ordered
, @ItmUM          AS u_m
, @QtyReserved    AS qty_rsvd
, @ItmItem        AS item
, @ItmDescription AS description
INTO #Results
WHERE 1=2

exec dbo.ApsSyncDeferSp @Infobar output
, @Context = 'ReserveSp'

set @PostCount = 0

DECLARE
  ReserveSpCrs1 CURSOR LOCAL STATIC FOR
SELECT
  itm.item
, itm.description
, itm.u_m
, cot.co_num
, cot.co_line
, cot.co_release
, co.order_date
, cot.qty_ordered - cot.qty_rsvd - cot.qty_shipped
, cot.whse
, cot.u_m
, cot.due_date
, cot.qty_ordered
, co.cust_num
, cad.name
FROM item AS itm WITH (READUNCOMMITTED)
INNER JOIN coitem AS cot ON
  cot.co_num BETWEEN ISNULL (@StartCoNum, cot.co_num) AND
   ISNULL (@EndCoNum, cot.co_num)
AND cot.co_line BETWEEN ISNULL (@StartCoLine, cot.co_line) AND
  ISNULL (@EndCoLine, cot.co_line)
AND cot.co_release BETWEEN ISNULL (@StartCoRelease, cot.co_release) AND
  ISNULL (@EndCoRelease, cot.co_release)
AND cot.item = itm.item
AND CHARINDEX(cot.stat, @UseStat) > 0
and cot.ship_site = @ParmsSite
AND DATEDIFF (DAY, ISNULL (@StartDueDate, cot.due_date), cot.due_date) >= 0
AND DATEDIFF (DAY, cot.due_date, ISNULL (@EndDueDate, cot.due_date)) >= 0
INNER JOIN co with (readuncommitted) ON
  co.cust_num BETWEEN ISNULL (@StartCustNum, co.cust_num) AND
  ISNULL(@EndCustNum, co.cust_num)
AND DATEDIFF (DAY, ISNULL (@StartOrderDate, co.order_date), co.order_date) >= 0
AND DATEDIFF (DAY, co.order_date, ISNULL (@EndOrderDate, co.order_date)) >= 0
AND co.co_num = cot.co_num
AND co.type in ('R', 'B')
INNER JOIN custaddr AS cad with (readuncommitted) ON
  cad.cust_num = co.cust_num
AND cad.cust_seq = 0
WHERE itm.item BETWEEN ISNULL (@StartItem, itm.item) AND
  ISNULL (@EndItem, itm.item)
AND ISNULL (itm.reservable, 0) = 1
ORDER BY itm.item, cot.item, cot.due_date

OPEN ReserveSpCrs1
WHILE @Severity = 0
BEGIN
    FETCH ReserveSpCrs1 INTO
      @ItmItem
    , @ItmDescription
    , @ItmUM
    , @CotCoNum
    , @CotCoLine
    , @CotCoRelease
    , @CoOrderDate
    , @CotQtyToReserve
    , @CotWhse
    , @CotUM
    , @CotDueDate
    , @CotQtyOrdered
    , @CoCustNum
    , @CadCustName

    IF @@FETCH_STATUS != 0
        BREAK

   if @PostCount = 0
   begin
      set @PostCount = 1
      begin transaction
   end
   else
      set @PostCount = @PostCount + 1

   if @PostCount > 100
   begin
      commit transaction
      set @PostCount = 1
      begin transaction
   end

    IF @RsvdType = 'R'
    BEGIN
        IF @InFile = 'T' OR @InFile = 'B'
        BEGIN

            EXEC @Severity = dbo.ZWM_InvRsvSp
              @ItmItem
            , @CotCoNum
            , @CotCoLine
            , @CotCoRelease
            , @CotQtyToReserve
            , @CotWhse
            , @CotUM
            , @CoCustNum
            , 'reserve.p'
            , @QtyReserved OUTPUT
            , @Infobar     OUTPUT
            , @ParmsSite
            , 0				-- No realizar reservar fijas (No hace reservas para item Clase C)
            , 0			-- Hrs a resevar NULL
            , 'O'				-- Identificar reservas como O=Customer Order
            IF @Severity <> 0
                BREAK

        END -- @Infile 'T', or 'B'
        ELSE
        BEGIN
            /* Preview only */
            EXEC @Severity = dbo.ZWM_InvRsvSp
              @ItmItem
            , @CotCoNum
            , @CotCoLine
            , @CotCoRelease
            , @CotQtyToReserve
            , @CotWhse
            , @CotUM
            , @CoCustNum
            , 'reserve.pprev'
            , @QtyReserved OUTPUT
            , @Infobar     OUTPUT
            , @ParmsSite
            , 0				-- No realizar reservar fijas (No hace reservas para item Clase C)
            , 0			-- Hrs a resevar NULL
            , 'O'				-- Identificar reservas como O=Customer Order
            IF @Severity <> 0
                BREAK
        END -- Preview only

      INSERT INTO #Results (
         co_num
       , co_line
       , co_release
       , order_date
       , due_date
       , name
       , qty_ordered
       , u_m
       , qty_rsvd
       , item
       , description
       ) VALUES (
         @CotCoNum
       , @CotCoLine
       , @CotCoRelease
       , @CoOrderDate
       , @CotDueDate
       , @CadCustName
       , @CotQtyOrdered
       , @ItmUM
       , @QtyReserved
       , @ItmItem
       , @ItmDescription
       )
    END -- @RsvdType = 'R'
    ELSE
    BEGIN
        DECLARE
          ReserveSpCrs2 CURSOR local static FOR
        SELECT
          rsi.RowPointer
        , rsi.qty_rsvd_conv
        FROM rsvd_inv AS rsi
        WHERE rsi.ref_num = @CotCoNum
        AND rsi.ref_line = @CotCoLine
        AND rsi.ref_release = @CotCoRelease
        -- ZWM
        AND ISNULL(rsi.ZWM_RefType,'O') = 'O'

        OPEN ReserveSpCrs2
        WHILE @Severity = 0
        BEGIN
            FETCH ReserveSpCrs2 INTO
              @RsiRowPointer
            , @RsiQtyRsvdConv

            IF @@FETCH_STATUS = -1
                BREAK
            IF @@FETCH_STATUS = -2
                CONTINUE

            IF @Infile = 'T' OR @Infile = 'B'
            BEGIN
                SET @SessionID     = dbo.SessionIDSp() 
                EXEC @Severity = dbo.UpdResvSp
                  1 -- @DelRsvd true
                , @RsiRowPointer
                , @RsiQtyRsvdConv
                , 1 -- @ConvFactor
                , 'From Base' -- @FromBase
                , @Infobar OUTPUT
                , @SessionID
                IF @Severity <> 0
                    BREAK
            END
            INSERT INTO #Results (
               co_num
             , co_line
             , co_release
             , order_date
             , due_date
             , name
             , qty_ordered
             , u_m
             , qty_rsvd
             , item
             , description
             ) VALUES (
               @CotCoNum
             , @CotCoLine
             , @CotCoRelease
             , @CoOrderDate
             , @CotDueDate
             , @CadCustName
             , @CotQtyOrdered
             , @ItmUM
             , @RsiQtyRsvdConv
             , @ItmItem
             , @ItmDescription
             )
        END
        CLOSE ReserveSpCrs2
        DEALLOCATE ReserveSpCrs2

    END -- @RsvdType <> 'R'

END -- End ReserveSpCrs1
CLOSE ReserveSpCrs1
DEALLOCATE ReserveSpCrs1

if @PostCount > 0
   commit transaction

exec dbo.ApsSyncImmediateSp @Infobar output
, @Context = 'ReserveSp'

SELECT DISTINCT
  co_num
, co_line
, co_release
, order_date
, due_date
, name
, qty_ordered
, u_m
, qty_rsvd
, item
, description
FROM #Results

DROP TABLE #Results

RETURN 0
GO


