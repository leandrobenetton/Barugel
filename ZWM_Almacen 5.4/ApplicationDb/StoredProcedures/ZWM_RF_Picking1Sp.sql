/****** Object:  StoredProcedure [dbo].[ZWM_RF_Picking1Sp]    Script Date: 01/20/2015 15:10:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ZWM_RF_Picking1Sp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ZWM_RF_Picking1Sp]
GO

/****** Object:  StoredProcedure [dbo].[ZWM_RF_Picking1Sp]    Script Date: 01/20/2015 15:10:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[ZWM_RF_Picking1Sp] (
     @Site				SiteType
	,@UserName			UserNameType			= NULL
	,@PickListID		PickListIDType			= NULL
	,@Seq				PickListSequenceType	= NULL
	,@CoNum				CoNumType				= NULL
	,@CoLine			CoLineType				= NULL
	,@CoRelease			CoReleaseType			= NULL
	,@whse				WhseType				= NULL OUTPUT
    ,@Loc				LocType					= NULL OUTPUT
    ,@Item				ItemType				= NULL OUTPUT
    ,@Lot				LotType					= NULL OUTPUT
    ,@Qty				QtyUnitType				= NULL OUTPUT
    ,@um				UMType					= NULL OUTPUT
    ,@Infobar			InfobarType				= NULL OUTPUT
)
AS

 -- Check for existence of Generic External Touch Point routine (this section was generated by SpETPCodeSp and inserted by CallETPs.exe):
   IF OBJECT_ID(N'dbo.EXTGEN_ZWM_RF_Picking1Sp') IS NOT NULL
   BEGIN
      DECLARE @EXTGEN_SpName sysname
      SET @EXTGEN_SpName = N'dbo.EXTGEN_ZWM_RF_Picking1Sp'
      -- Invoke the ETP routine, passing in (and out) this routine's parameters:
      DECLARE @EXTGEN_Severity int
      EXEC @EXTGEN_Severity = @EXTGEN_SpName
		 @Site				
		,@UserName			
		,@PickListID		
		,@Seq				
		,@CoNum				
		,@CoLine			
		,@CoRelease			
		,@whse				OUTPUT
		,@Loc				OUTPUT
		,@Item				OUTPUT
		,@Lot				OUTPUT
		,@Qty				OUTPUT
		,@um				OUTPUT
		,@Infobar			OUTPUT	
 
      -- ETP routine can RETURN 1 to signal that the remainder of this standard routine should now proceed:
      IF @EXTGEN_Severity <> 1
         RETURN @EXTGEN_Severity
   END
   -- End of Generic External Touch Point code.



DECLARE	@return_value int,
		@Severity int,
		@sessionId		RowPointerType

SET @UserName = isnull(@UserName,'sa')

EXEC	@return_value = [dbo].[InitSessionContextWithUserSp]
		@ContextName = 'ZWM',
		@UserName = @UserName,
		@SessionID = @SessionID OUTPUT,
		@Site = @Site
	
SET @CoNum = dbo.ExpandKyByType('CoNumType',@CoNum)	
SET @Lot = dbo.ExpandKyByType('LotType',@Lot)

------------------------------ SET NULLs
IF LEN(LTRIM(@PickListID)) = 0
	SET @PickListID = NULL

IF LEN(LTRIM(@Seq)) = 0
	SET @Seq = NULL

IF LEN(LTRIM(@CoNum)) = 0
	SET @CoNum = NULL

IF LEN(LTRIM(@CoLine)) = 0
	SET @CoLine = NULL

IF LEN(LTRIM(@CoRelease)) = 0
	SET @CoRelease = NULL
------------------------------ SET NULLs

	
IF	@PickListID IS NULL AND @Seq IS NULL AND @CoNum IS NULL AND @CoLine IS NULL AND @CoRelease IS NULL
BEGIN
	SET @Infobar = 'Debe ingresar Pick List ID o Numero de Pedido'
	SET @Severity = 16
	RETURN @Severity
END

IF @PickListID IS NULL or @Seq IS NULL
BEGIN
	SELECT @PickListID = pick_list_id, @Seq = sequence
	FROM pick_list_ref
	WHERE ref_num = @CoNum AND ref_line_suf = @CoLine AND ref_release = @CoRelease
	AND qty_to_pick > qty_picked
END

IF (select count(pick_list_id)FROM pick_list_ref where pick_list_id = @PickListID and sequence = @Seq) = 0
begin
	SET @Infobar = 'No Existen los datos de referencia'
	SET @Severity = 16
	RETURN @Severity
end

IF (select status FROM pick_list_ref plr join pick_list pl on pl.pick_list_id = plr.pick_list_id 
where plr.pick_list_id = @PickListID and plr.sequence = @Seq) != 'O'
begin
	SET @Infobar = 'El Pickeo esta cerrado'
	SET @Severity = 16
	RETURN @Severity
end

BEGIN
	SELECT TOP 1
	@item = i.item
	,@whse = pl.whse
	,@loc = pll.loc
	,@lot = pll.lot
	,@qty = (pll.qty_to_pick - pll.qty_picked)
	,@um = i.u_m
	FROM 
	pick_list pl
	JOIN pick_list_ref plr
	ON pl.pick_list_id = plr.pick_list_id
	JOIN pick_list_loc pll
	ON pl.pick_list_id = pll.pick_list_id
	JOIN coitem coi
	ON plr.ref_num = coi.co_num and plr.ref_line_suf = coi.co_line and plr.ref_release = coi.co_release
	JOIN item i
	ON coi.item = i.item
	WHERE pll.pick_list_id = @PickListID and pll.sequence = @Seq
	AND pll.qty_to_pick > pll.qty_picked
END

EXEC dbo.CloseSessionContextSp @SessionID = @SessionID
GO


