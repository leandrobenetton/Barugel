/****** Object:  StoredProcedure [dbo].[EXTGEN_UpdResvSp]    Script Date: 12/18/2014 11:40:36 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[EXTGEN_UpdResvSp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[EXTGEN_UpdResvSp]
GO

/****** Object:  StoredProcedure [dbo].[EXTGEN_UpdResvSp]    Script Date: 12/18/2014 11:40:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- This routine Updates OR DELETEs Inventory Reservations
-- This routine was converted FROM item/upd-resv.p.

/* $Header: /ApplicationDB/Stored Procedures/UpdResvSp.sp 18    5/24/11 5:31a Xliang $ */
/*
***************************************************************
*                                                             *
*                           NOTICE                            *
*                                                             *
*   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
*   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS AFFILIATES   *
*   OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED WITHOUT PRIOR  *
*   WRITTEN PERMISSION. LICENSED CUSTOMERS MAY COPY AND       *
*   ADAPT THIS SOFTWARE FOR THEIR OWN USE IN ACCORDANCE WITH  *
*   THE TERMS OF THEIR SOFTWARE LICENSE AGREEMENT.            *
*   ALL OTHER RIGHTS RESERVED.                                *
*                                                             *
*   (c) COPYRIGHT 2010 INFOR.  ALL RIGHTS RESERVED.           *
*   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
*   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
*   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL RIGHTS        *
*   RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE         *
*   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
*                                                             *
*************************************************************** 
*/
/* $Archive: /ApplicationDB/Stored Procedures/UpdResvSp.sp $
 *
 * SL8.03 18 136300 Xliang Tue May 24 05:31:20 2011
 * Code review notes
 * 136300: change error message for consignment order validation.
 *
 * SL8.03 17 138076 pgross Fri Apr 29 09:08:13 2011
 * added finer control over when serial records are deallocated
 *
 * SL8.03 16 rs4854 Kbotley Fri Feb 04 16:28:07 2011
 * RS4854 - Addition of Item to the select on the serial table
 *
 * SL8.03 15 RS4771 Xliang Fri Jan 21 07:40:04 2011
 * RS4771: check co consignment.if a Customer Order is flagged as a Consignment Order, then the warehouse value on the lines is required to be the Ship-To’s Consignment Warehouse.
 *
 * SL8.02 14 rs4588 Dahn Thu Mar 04 16:50:38 2010
 * rs4588 copyright header changes.
 *
 * SL8.01 13 rs3953 Vlitmano Tue Aug 26 19:39:41 2008
 * RS3953 - Changed a Copyright header?
 *
 * SL8.01 12 rs3953 Vlitmano Mon Aug 18 15:42:52 2008
 * Changed a Copyright header information(RS3959)
 *
 * SL8.01 11 110122 pgross Thu Jul 10 13:43:57 2008
 * Order Shipping - is not changing serial number status to out of inventory.
 * conditionally process tmp_ser records
 *
 * SL8.01 10 107346 pgross Mon Mar 17 16:21:46 2008
 * Reservations for Order is not very user friendly.  Save Icon not working properly.
 * improved handling of serial numbers
 *
 * SL8.00 9 102541 hcl-nautami Wed Jul 04 09:09:37 2007
 * Serial number will be list again in Reservations For Order form when user select 'select range' button.
 * Issue 102541
 * Unreserved serial numbers have rsvd_num = NULL not 0
 *
 * SL8.00 8 RS2968 nkaleel Mon Feb 26 00:04:28 2007
 * changing copyright information(RS2968)
 *
 * SL8.00 7 RS2968 prahaladarao.hs Wed Jul 12 02:58:07 2006
 * RS 2968, Name change CopyRight Update.
 *
 * SL7.05 6 91818 NThurn Fri Jan 06 18:38:16 2006
 * Inserted standard External Touch Point call.  (RS3177)
 *
 * SL7.04 5 91152 Hcl-guptanu Wed Dec 28 07:32:55 2005
 * Issue ## 91152
 * Added "WITH (READUNCOMMITTED)" to item selects.
 *
 * SL7.04 4 90699 Hcl-jainami Tue Dec 13 17:35:48 2005
 * When deleted an item in CO-Line form but that item still appear in Reservations form.
 * Checked-in for issue 90699:
 * Added a check to update 'qty_rsvd' in 'coitem' table only if the variable 'SkipCoItemQtyRsvdUpdate' is not defined.
 *
 * $NoKeywords: $
 */
CREATE PROCEDURE [dbo].[EXTGEN_UpdResvSp] (
  @DelRsvd       Flag
, @RsiRowPointer RowPointerType
, @AdjQty        QtyUnitType
, @ConvFactor    UMConvFactorType
, @FROMBase      NVARCHAR(20)
, @Infobar       Infobar OUTPUT
, @SessionID RowPointerType
, @ProcessTmpSer ListYesNoType = 0
, @ClearUnusedSerials ListYesNoType = 0
)
AS

   -- Check for existence of Generic External Touch Point routine (this section was generated by SpETPCodeSp and inserted by CallETPs.exe):
   IF OBJECT_ID(N'dbo.EXTGEN_EXTGEN_UpdResvSp') IS NOT NULL
   BEGIN
      DECLARE @EXTGEN_SpName sysname
      SET @EXTGEN_SpName = N'dbo.EXTGEN_EXTGEN_UpdResvSp'
      -- Invoke the ETP routine, passing in (and out) this routine's parameters:
      DECLARE @EXTGEN_Severity int
      EXEC @EXTGEN_Severity = @EXTGEN_SpName
         @DelRsvd
         , @RsiRowPointer
         , @AdjQty
         , @ConvFactor
         , @FROMBase
         , @Infobar OUTPUT
         , @SessionID
         , @ProcessTmpSer
         , @ClearUnusedSerials
 
      -- ETP routine can RETURN 1 to signal that the remainder of this standard routine should now proceed:
      IF @EXTGEN_Severity <> 1
         RETURN @EXTGEN_Severity
   END
   -- End of Generic External Touch Point code.
 
DECLARE
  @Severity      INT
, @ParmsSite     SiteType
, @RsiQtyRsvd    QtyUnitType
, @RsiRefNum     CoNumType
, @RsiRefLine    CoLineType
, @RsiRefRelease CoLineType
, @RsiItem       ItemType
, @RsiLot        LotType
, @RsiLoc        LocType
, @RsiWhse       WhseType
, @RsiRsvdNum    RsvdNumType
, @ItmLotTracked Flag
, @SerialTracked ListYesNoType
, @Add ListYesNoType
, @CoWhse        WhseType
, @CoConsignment ListYesNoType

-- ZWM BEGIN
, @RsiZWMFixed		FlagNyType 
, @RsiZWMRefType	RefTypeIJKOPRSTWType
, @RsiZWMExpDate	DateTimeType	 
-- ZWM END

SET @Severity = 0

SELECT
  @ParmsSite = site
FROM parms with (readuncommitted)

SELECT
  @RsiQtyRsvd    = rsi.qty_rsvd
, @RsiRefNum     = rsi.ref_num
, @RsiRefLine    = rsi.ref_line
, @RsiRefRelease = rsi.ref_release
, @RsiItem       = rsi.item
, @RsiLot        = rsi.lot
, @RsiLoc        = rsi.loc
, @RsiWhse       = rsi.whse
, @RsiRsvdNum    = rsi.rsvd_num
-- 
, @RsiZWMFixed	  = ZWM_Fixed
, @RsiZWMRefType = ZWM_RefType
, @RsiZWMExpDate = ZWM_ExpDate
FROM rsvd_inv AS rsi
WHERE rsi.RowPointer = @RsiRowPointer

IF @@ROWCOUNT <> 1
BEGIN
   EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT, 'E=NoExist0'
   , '@rsvd_inv'
   RETURN @Severity
END

SELECT
  @ItmLotTracked = itm.lot_tracked
, @SerialTracked = itm.serial_tracked
FROM item AS itm WITH (READUNCOMMITTED)
WHERE itm.item = @RsiItem
IF @@ROWCOUNT <> 1
BEGIN
   EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT, 'E=NoExist0'
   , '@item'

   RETURN @Severity
END


-- ZWM BEGIN
SET @RsiZWMRefType = ISNULL(@RsiZWMRefType,'O')	-- Set Reserve Type O=Customer Orders

IF @RsiZWMRefType = 'O'
BEGIN
-- ZWM END
 
	SELECT 
	@CoWhse = co.whse, 
	@CoConsignment = co.consignment 
	FROM co WITH (READUNCOMMITTED)
	where co.co_num = @RsiRefNum
END
ELSE	-- TO´s
BEGIN
SELECT 
	@CoWhse = from_whse , 
	@CoConsignment = 0 
	FROM transfer WITH (READUNCOMMITTED)
	where trn_num  = @RsiRefNum
 
END
IF @@ROWCOUNT > 0
BEGIN
	IF @CoConsignment = 1 AND @CoWhse <> @RsiWhse
	BEGIN
		EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
	   , 'I=IsCompare=1'
	   , '@co.consignment'
	   , '@:ListYesNo:1'
	   , '@co.co_num'
	   , '@co.co_num'
	   , @RsiRefNum 
		EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
	   , 'E=MustCompare'
	   , '@whse.whse'
	   , @CoWhse

		RETURN @Severity
	END
END

IF @DelRsvd = 1
    SET @AdjQty = -1.0 * @RsiQtyRsvd
ELSE
BEGIN
    SET @RsiQtyRsvd = dbo.MaxQtySp(0, @RsiQtyRsvd + @AdjQty)
    UPDATE rsvd_inv
    SET qty_rsvd = @RsiQtyRsvd
    , qty_rsvd_conv = dbo.UomConvQty(@RsiQtyRsvd, @ConvFactor, @FROMBase)
    WHERE RowPointer = @RsiRowPointer

    SET @Severity = @@ERROR
    IF @Severity <> 0
        RETURN @Severity
END

IF NOT (@AdjQty = 0 AND @DelRsvd = 1)
BEGIN
    UPDATE itemwhse
    SET qty_rsvd_co = dbo.MaxQtySp(0.0, qty_rsvd_co + @AdjQty)
    WHERE item = @RsiItem
    AND   whse = @RsiWhse
    IF @@ROWCOUNT <> 1
    BEGIN
       EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT, 'E=NoExist0'
       , '@itemwhse'
       RETURN @Severity
    END

    UPDATE itemloc
    SET qty_rsvd = dbo.MaxQtySp(0.0, qty_rsvd + @AdjQty)
    WHERE item = @RsiItem
    AND   whse = @RsiWhse
    AND   loc  = @RsiLoc
    IF @@ROWCOUNT <> 1
    BEGIN
       EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT, 'E=NoExist3'
       , '@itemloc'
       , '@itemloc.item', @RsiItem
       , '@itemloc.whse', @RsiWhse
       , '@itemloc.loc', @RsiLoc

       RETURN @Severity
    END

    IF @ItmLotTracked = 1
    BEGIN
        UPDATE lot_loc
        SET qty_rsvd = dbo.MaxQtySp(0.0, qty_rsvd + @AdjQty)
        WHERE item = @RsiItem
        AND   whse = @RsiWhse
        AND   loc  = @RsiLoc
        AND   lot  = @RsiLot
        IF @@ROWCOUNT <> 1
        BEGIN
           EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT, 'E=NoExist0'
           , '@lot_loc'
           RETURN @Severity
        END
    END

    IF dbo.VariableIsDefined('SkipCoItemQtyRsvdUpdate') = 0
		-- ZWM
		AND ISNULL(@RsiZWMRefType,'O') = 'O'	-- Customer Order Reserve 
    BEGIN
        UPDATE coitem
        SET qty_rsvd = dbo.MaxQtySp(0.0, qty_rsvd + @AdjQty)
        , qty_ready = (CASE coitem.ref_type
             WHEN 'I' THEN qty_ready + @AdjQty
             ELSE qty_ready
             END)
        WHERE co_num     = @RsiRefNum
        AND   co_line    = @RsiRefLine
        AND   co_release = @RsiRefRelease
        AND   ISNULL (ship_site, NCHAR(1)) = ISNULL (@ParmsSite, NCHAR(1))

        IF @@ROWCOUNT <> 1
        BEGIN
           EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT, 'E=NoExist0'
           , '@coitem'
           RETURN @Severity
        END
    END
 
	 IF ISNULL(@RsiZWMRefType,'O') = 'T'	-- Transfer Order
    BEGIN
        UPDATE trnitem
        SET ZWM_QtyRsvd = dbo.MaxQtySp(0.0, ZWM_QtyRsvd + @AdjQty)
        WHERE trn_num     = @RsiRefNum
        AND   trn_line    = @RsiRefLine
        

        IF @@ROWCOUNT <> 1
        BEGIN
           EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT, 'E=NoExist0'
           , '@trnitem'
           RETURN @Severity
        END
    END
 

END-- NOT (@AdjQty = 0 AND @DelRsvd = 1)

IF @SerialTracked = 1 and @ProcessTmpSer = 1
BEGIN
   if @DelRsvd = 1
      set @Add = 0
   else
      set @Add = 1
   EXEC @Severity = dbo.SerResvSp
     @RsiRsvdNum
   , @AdjQty
   , @Add
   , @Infobar OUTPUT
   , @SessionID
   , @RsiItem
   , @ClearUnusedSerials = @ClearUnusedSerials
   DELETE FROM tmp_ser WHERE tmp_ser.SessionID = @SessionID
   IF @Severity <> 0
      RETURN @Severity
END

IF @DelRsvd = 1
BEGIN
    UPDATE serial
    SET stat = 'I'
    , rsvd_num = null
    WHERE rsvd_num = @RsiRsvdNum
    AND stat = 'R'
    SET @Severity = @@ERROR
    IF @Severity <> 0
        RETURN @Severity

    DELETE rsvd_inv
    WHERE RowPointer = @RsiRowPointer
    SET @Severity = @@ERROR
    IF @Severity <> 0
        RETURN @Severity
END

RETURN 0
GO


